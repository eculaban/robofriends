{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filterRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAaeA,EAZF,SAAC,GAA0B,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC7B,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,eAAeC,IAAG,+BAA0BH,EAA1B,4BAC3B,gCACC,6BAAKF,IACL,4BAAIC,WCcOK,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAClB,OACC,8BAEEA,EAAOC,KAAK,SAACC,EAAMC,GAClB,OACC,cAAC,EAAD,CAECR,GAAIK,EAAOG,GAAGR,GACdF,KAAOO,EAAOG,GAAGV,KACjBC,MAAQM,EAAOG,GAAGT,OAHbM,EAAOG,GAAGR,UCKPS,EAbG,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,aACpB,OACC,qBAAKT,UAAU,MAAf,SACC,uBACCA,UAAU,oCACVU,KAAK,SACLC,YAAY,gBACZC,SAAYH,OCADI,EARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,SAA1C,SACEH,EAAMI,YCsCKC,E,kDAnCd,aAAe,IAAD,8BACb,gBAaDC,eAAiB,SAACC,GACjB,EAAKC,SAAU,CAAEC,YAAaF,EAAMG,OAAOC,SAb3C,EAAKC,MAAQ,CACZtB,OAAQ,GACRmB,YAAa,IAJD,E,qDAQd,WAAqB,IAAD,OACnBI,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAClB,OAAQ2B,S,oBAOxC,WAAU,IAAD,EACsBC,KAAKN,MAA5BtB,EADC,EACDA,OAAQmB,EADP,EACOA,YACTU,EAAe7B,EAAO8B,QAAQ,SAAAC,GACnC,OAAOA,EAAMtC,KAAKuC,cAAcC,SAASd,EAAYa,kBAGtD,OAAQhC,EAAOkC,OAEd,sBAAKtC,UAAU,KAAf,UACC,oBAAIA,UAAU,QAAd,2BACA,cAAC,EAAD,CAAWS,aAAcuB,KAAKZ,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,CAAUhB,OAAQ6B,SALpB,oBAAIjC,UAAU,KAAd,4B,GA1BeuC,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.50815cd5.chunk.js","sourcesContent":["\nconst Card = ( { name, email, id }) => {\n\treturn(\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img alt='robots cover' src={`https://robohash.org/${id}?set=set2&size=200x200`} />\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Card;","import Card from './Card';\n\nconst CardList = ({robots}) => {\n\treturn(\n\t\t<div>\n\t\t\t{\n\t\t\t\trobots.map( (user, i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Card \n\t\t\t\t\t\t\tkey={robots[i].id} \n\t\t\t\t\t\t\tid={robots[i].id} \n\t\t\t\t\t\t\tname={ robots[i].name} \n\t\t\t\t\t\t\temail={ robots[i].email} \n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default CardList;","\nconst SearchBox = ( {searchChange}) => {\n\treturn(\n\t\t<div className='pa2'>\n\t\t\t<input \n\t\t\t\tclassName='pa3 ba ba--green bg-lightest-blue' \n\t\t\t\ttype='search' \n\t\t\t\tplaceholder='search robots' \n\t\t\t\tonChange = {searchChange}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default SearchBox;","const Scroll = (props) => {\n\treturn (\n\t\t<div style={{overflowY: 'scroll', height: '800px'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n}\n\nexport default Scroll","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll'\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response => response.json())\n\t\t\t.then(users => this.setState({robots: users}));\n\t}\n\n\tonSearchChange = (event) => {\n\t\tthis.setState( { searchfield: event.target.value  } )\n\t}\n\n\trender() {\n\t\tconst {robots, searchfield} = this.state;\n\t\tconst filterRobots = robots.filter( robot => {\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\n\t\t})\n\n\t\treturn !robots.length ? \n\t\t\t<h1 className=\"tc\">Loading...</h1> :\n\t\t\t<div className='tc'>\n\t\t\t\t<h1 className='f1 tc'>Robot Friends</h1>\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\n\t\t\t\t<Scroll>\n\t\t\t\t\t<CardList robots={filterRobots} />\n\t\t\t\t</Scroll>\n\t\t\t</div>\n\t}\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport './containers/App.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}